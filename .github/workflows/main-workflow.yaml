name: Retag Image with Release Version
run-name: Build and Push Image with rc

on:

  pull_request:
    branches: ["develop"]

jobs:
  update_tag_with_release_version:

    name: Update tag image with Release Version
    runs-on: ubuntu-latest
    if: ${{ (github.event.review.state == 'approved')
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Release Version
        run: |
              version=$(jq -r '.version' package.json)
              echo "Package version is: $version"
              echo "release_version=$version" >> $GITHUB_ENV
      
      - name: Set output named RELEASE_VERSION
        id: release-version
        run: echo "RELEASE_VERSION=$release_version" >> "$GITHUB_OUTPUT" 

      - name: Set output Old Image Tag (commit id)
        id: image-commit-tag
        run:  |
              #----setup env
              image_with_commit_tag=$(yq -r '.spec.template.spec.containers[0].image' ./manifest/dev/deployment.yaml) >> $GITHUB_ENV
              echo "image_with_commit_tag is: $image_with_commit_tag"
              #----setup output
              echo "IMAGE_COMMIT_TAG=$image_with_commit_tag" >> $GITHUB_OUTPUT
              echo "IMAGE_COMMIT_TAG is: ${{ steps.image-commit-tag.outputs.IMAGE_COMMIT_TAG }}"


      - name: Set output New Image Tag (release version)
        id: image-rc-tag
        run:  |
              #----setup env
              image_with_rc_tag="${{ secrets.DOCKER_USERNAME }}/week-9-1021:${{ steps.release-version.outputs.RELEASE_VERSION }}" >> $GITHUB_ENV
              echo "image_with_rc_tag is: $image_with_rc_tag"
              #----setup output
              echo "IMAGE_RELEASE_TAG=$image_with_rc_tag" >> $GITHUB_OUTPUT
              echo "IMAGE_RELEASE_TAG is: '${{ steps.image-rc-tag.outputs.IMAGE_RELEASE_TAG }}'"
      

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Image
        run: |
             pull_command="docker pull ${{ steps.image-commit-tag.outputs.IMAGE_COMMIT_TAG }}" >> $GITHUB_ENV
             echo "pull_command: $pull_command"
             $pull_command 
             docker images | grep 1021

      - name: Retag Image
        run: |
             tag_command="docker tag ${{ steps.image-commit-tag.outputs.IMAGE_COMMIT_TAG }} ${{ steps.image-rc-tag.outputs.IMAGE_RELEASE_TAG }}" >> $GITHUB_ENV
             echo "tag_command: $tag_command"
             $tag_command 

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.image-rc-tag.outputs.IMAGE_RELEASE_TAG }}

      - name: Check Image New tag
        run: docker images | grep 1021