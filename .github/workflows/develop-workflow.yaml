name: Retag Image with Commit id
run-name: Build and Push Image with commitid

on:
  push:
    branches: ["develop"]

jobs:
  update_tag_with_committid:

    name: Update tag image with Git commitID
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 

      - name: Get Git CommitId  
        run: |
            echo "commit_id=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
            echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
            source $GITHUB_ENV
            echo "branch: " $branch
            echo "commitid: " $commit_id
            
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Set output named COMMIT_ID
        id: git-commitid
        run: echo "COMMIT_ID=$commit_id" >> "$GITHUB_OUTPUT"


      - name: Use output from previouse step
        env:
          COMMIT_ID: ${{ steps.git-commitid.outputs.COMMIT_ID }}
        run: echo "Commit Id is $COMMIT_ID"
      
      - name: Build and Push with tag = Git CommitId
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/week-9-1021:${{ steps.git-commitid.outputs.COMMIT_ID }}
      
      - name: Access K8s Cluster
        env: 
             KUBECTL_CONFIG_CONTENT: ${{ secrets.KUBE_CONFIG }} #suggest for case variable multiple line
        run: |
             mkdir -p ~/.kube
             echo "$KUBECTL_CONFIG_CONTENT" > ~/.kube/config
      
      - name: Define Image New Version
        run: |
              echo "image_with_new_tag=${{ secrets.DOCKER_USERNAME }}/week-9-1021:${{ steps.git-commitid.outputs.COMMIT_ID }}" >> $GITHUB_ENV
              echo "Image with CommitId is: $image_with_new_tag"

      - name: Update Image in Deployment K8s
        run: yq -i '.spec.template.spec.containers[0].image=strenv(image_with_new_tag)' ./manifest/dev/deployment.yaml

      - name: Display yaml file
        run: cat ./manifest/dev/deployment.yaml

      # - name: Deploy Image
      #   run: kubectl apply -f ./manifest/dev/. -n group-3-dev
